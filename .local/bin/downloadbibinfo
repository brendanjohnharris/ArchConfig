#! /bin/bash
check_file_name() {
    local base_name="$1"
    local counter=0
    local suffix=""
    local chars=("a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z")

    # Keep checking and modifying filename until a unique name is found.
    while true; do
        # Construct the new file name.
        local new_name="$base_name$suffix.pdf"

        # If file doesn't exist, we've found our unique name.
        if [ ! -f "$DIR$new_name" ] && [ $(find "$DIR" -type f -name "$base_name$suffix.pdf" | wc -l) -eq 0 ]; then
            echo "$new_name"
            return 0
        fi

        # Otherwise, update suffix and check again.
        suffix="${chars[$counter]}"
        counter=$((counter + 1))
    done
}
DIR=$HOME/Notebook/Papers/
if [ -z $1 ]; then
    DOI=$(xclip -selection c -o)
else
    DOI="$1"
fi
DOI=$(echo $DOI | grep -oP '(10.).*') # All DOIS should start with 10.
notify-send "Retrieving bib info for $DOI"
URL="dx.doi.org/$DOI"
BIB=$(timeout 5 curl -LH "Accept: text/bibliography; style=bibtex" $URL)
if [ -z "$BIB" ]; then
    exit 1
fi
AUTHOR=$(echo $BIB | grep -oP '(?<=(author={)).*?(?=,)')
YEAR=$(echo $BIB | grep -oP '(?<=(year={)).*?(?=})')
TITLE=$(echo $BIB | grep -oP '(?<=(title={)).*?(?=})')
KEY="$AUTHOR$YEAR"
KEY=$(echo $KEY | sed 's/[\<\>\:\"\/\\\|\?\*]*//g')
FILE=$(check_file_name "$KEY") # Update the FILE variable with a unique name.
tmpBIB="${BIB:1:-1}"
IMPORT="$tmpBIB,}"
notify-send "Retrieved info"
if [ -z "$BIB" ]; then
    notify-send "Entry exists in database"
else
    notify-send "Importing $DOI"
    TMP=$(mktemp /tmp/bibXXXXXXXX.bib)
    echo "$IMPORT" >"$TMP"
    jabref -n -asfl --importToOpen "$TMP" -w "$KEY"
fi
